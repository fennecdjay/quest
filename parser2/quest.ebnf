TOP: <statements>;

statements := (<expr> (';' | '\n'))* <expr> (';' | '\n')? ;
expr
 :=
  | <assignment>
  | <function-call>
  | <terminal>
  | <expr-ops-cmp>

function-call := <expr> '(' <function-args> ')' <lambda>?;
assignment := (<expr> '.')* <ident-or-paren-terminal> ('**'|'<<'|'>>'| [-+*/%&|^])? '=' <expr>;
expr-ops-cmp := <expr-ops-equality> ('<=>' <expr-ops-equality>)? ;
expr-ops-equality := <expr-ops-comparison> (('==' | '!=') <expr-ops-comparison>)? ;
expr-ops-comparison := <expr-ops-bxor> (('<' | '>' | '<=' | '>=') <expr-ops-bxor>)? ;
expr-ops-bxor := <expr-ops-bor> ('^' <expr-ops-bor>)? ;
expr-ops-bor := <expr-ops-band> ('|' <expr-ops-band>)? ;
expr-ops-band := <expr-ops-shift> ('&' <expr-ops-shift>)? ;
expr-ops-shift := <expr-ops-addsub> (('<<' | '>>') <expr-ops-addsub>)? ;
expr-ops-addsub := <expr-ops-muldiv> (('+' | '-') <expr-ops-muldiv>)? ;
expr-ops-muldiv := <expr-ops-pow> (('*' | '/' | '%') <expr-ops-pow>)? ;
expr-ops-pow := <expr-ops-unary> ('**' <expr-ops-unary>)? ;
expr-ops-unary := ('-' | '+' | '~' | '!')? <expr-ops-scope>;
expr-ops-scope := <terminal> (('.' | '::') <ident-or-paren-terminal>)? ;
ident-or-paren-terminal := IDENT | '(' <statements> ')' ;

terminal
 := <literal>
  | '(' <statements> ')'
  | '[' (<expr> ',')* <expr> ']'
  ;

literal: IDENT | NUMBER | STRING | <lambda>;

lambda := '{' ('|' <lamdba-args> '|')? <statements> '}' ;
lambda := '{' <lamdba-args> <statements> '}';

IDENT := [a-zA-Z_] [a-zA-Z0-9_] ;
NUMBER
 := [0-9] [0-9_]*
  | [0-9] [0-9_]*  ('.' [0-9] [0-9_]* )? ([eE][-+] [0-9] [0-9_]*)?
  | '0' [xX] [a-fA-F0-9] [a-fA-F0-9_]*
  | '0' [oO] [0-7] [0-7_]*
  | '0' [bB] [01] [01]*
  | '0' [dD] [0-9] [0-9_]*
  ;
STRING
 :=
  | `'` (`\` ['\] | [^'])* `'`
  | `"` (STRING_ESCAPES | [^"]) `"`
  | HEREDOC
  ;

OPS_ASSIGNMENT
 := '**=' | '<<=' | '>>='
  | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^='
  | '='
  ;

OPS_CMP := '<=>' ;
OPS_EQUALITY := '==' | '!=' ;
OPS_COMPAIRSON := '<' | '>' | '<=' | '>=' ;
OPS_BXOR := '^' ;
OPS_BOR := '|' ;
OPS_BAND := '&' ;
OPS_SHIFT := '<<' | '>>' ;
OPS_ADDSUB := '+' | '-' ;
OPS_MULDIV := '*' | '/' | '%' ;
OPS_POW := '**' ;
OPS_UNARY := '-' | '+' | '~' | '!' ;
OPS_SCOPE := '.' | '::' ;
